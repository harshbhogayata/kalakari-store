version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: kalakari-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: kalakari
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - kalakari-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kalakari-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kalakari-network

  # Backend API
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: kalakari-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb+srv://HarshBhogayata:d8IwNkI92A9YnAi2@kalakari0.lolujvz.mongodb.net/?retryWrites=true&w=majority&appName=Kalakari0
      REDIS_URL: redis://redis:6379
      JWT_SECRET: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6k7l8m9n0o1p2q3r4s5t6u7v8w9x0y1z2
      SESSION_SECRET: your-session-secret
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - kalakari-network

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: kalakari-client
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000
      REACT_APP_ENVIRONMENT: production
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - kalakari-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kalakari-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    networks:
      - kalakari-network

volumes:
  mongodb_data:
  redis_data:

networks:
  kalakari-network:
    driver: bridge
